# Nginx用户及组：用户 组。window下不指定
# user nobody;
# worker_processed 1;

# 工作进程：数目。根据硬件调整，通常等于CPU数量或者2倍于CPU。
worker_processes 4;
worker_cpu_affinity 0001 0010 0100 1000;

# 错误日志：存放路径。
# error_log  logs/error.log;
# error_log  logs/error.log  notice;
# error_log  logs/error.log  info;

# pid（进程标识符）：存放路径。
# pid logs/nginx.pid;

# 工作模式以及连接数上限
events {
  # worker_connections 1024;
  # 使用epoll的I/O 模型。linux建议epoll，FreeBSD建议采用kqueue，window下不指定。
  use epoll;
  # 每个工作进程的最大连接数量
  worker_connections 65535;
  # keepalive超时时间。
  # keepalive_timeout 60;
  multi_accept on;
}

# 设定http服务器，利用它的反向代理功能提供负载均衡支持
http {
  include mime.types;
  default_type application/octet-stream;

  # 日志格式设置
  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
  '$status $body_bytes_sent "$http_referer" '
  '"$http_user_agent" "$http_x_forwarded_for"';
  log_format log404 '$status [$time_local] $remote_addr $host$request_uri $sent_http_location';
  
  # 用了log_format指令设置了日志格式之后，需要用access_log指令指定日志文件的存放路径
  access_log  logs/host.access.log  main;
  access_log  logs/host.access.404.log  log404;

  # sendfile指令指定 nginx 是否调用sendfile 函数（zero copy 方式）来输出文件，对于普通应用，必须设为on
  sendfile on;

  # keepalive超时时间。
  keepalive_timeout 60;

  # 负载均衡服务器列表
  upstream backend {
    server 127.0.0.1:8027;
    server 127.0.0.1:8028;
    server 127.0.0.1:8029;
    # hash $request_uri;
  }

  # 配置虚拟机
  server {
    # 配置监听端口号
    listen 80;
    # 配置访问域名
    server_name localhost;
    # 设定通过nginx上传文件的大小
    client_max_body_size 50M;

    # proxy static file
    # 通过域名+目录访问网站index.html, 如：http://127.0.0.1/m/ficc/website
    location /m/ficc/website {
      root /appdata/website; # nginx服务器静态资源存放路径 实际访问的还是 /appdata/website/m/ficc/website 目录下的 index.html
      index index.html
    }

    # proxy static file
    # 通过域名访问网站index.html, 如：http://127.0.0.1/
    location / {
      root /appdata/website/m/ficc/website; # nginx服务器静态资源存放路径
      index index.html
    }

    # 后台接口通过反向代理连接不同的环境(比如：生产环境、测试换环境、开发环境等)
    location /backend {
      # 使用负载均衡服务器列表
      proxy_pass http://backend;
      proxy_redirect default;
      client_max_body_size 50m;
      client_body_buffer_size 25m;
      proxy_temp_file_write_size 3m;
      proxy_buffer_size 3m;
      proxy_buffers 2 3m;
      proxy_busy_buffers_size 3m;
      proxy_send_timeout 90s;
      proxy_read_timeout 90s;

      # proxy_set_header Host $http_host;
      # 以下三行，目的是将代理服务器收到的用户的信息传到真实服务器上
      # proxy_set_header Host $host;
      # proxy_set_header X-Real-IP $remote_addr;
      # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      # proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 代理请求 开发环境 后台接口地址
    # location /dev/ {
    #   proxy_pass http://127.0.0.1:3000/; # dev环境地址
    #   proxy_redirect default;
    # }
    # 代理请求 fat1环境 后台接口地址
    location /fat/ {
      proxy_pass http://127.0.0.1:3100/; # fat环境地址
      proxy_redirect default;
    }
    # 代理请求 uat环境 后台接口地址
    location /uat/ {
      proxy_pass http://127.0.0.1:3200/; # uat环境地址
      proxy_redirect default;
    }
    # 代理请求 生产环境 后台接口地址
    location /pro/ {
      proxy_pass http://127.0.0.1/; # 生产环境地址
      proxy_redirect default;
    }



    # error_page  404              /404.html;
    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root html;
    }
  }
}
